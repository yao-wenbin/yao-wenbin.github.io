{"total":29,"pageSize":12,"pageCount":3,"data":[{"title":"《认知觉醒》阅读笔记","uid":"19b32d75b4602e8961d9ba4b1e504058","slug":"《认知觉醒》阅读笔记","date":"2023-09-21T13:43:04.000Z","updated":"2023-09-21T13:47:21.950Z","comments":true,"path":"api/articles/《认知觉醒》阅读笔记.json","cover":null,"text":"人的大脑人是一个长期演变进化而成的生物，在这个过程中，我们生长出了感性脑、理性脑三个大脑。 前两者的 学习力行动力增强回路在一天的早晨醒来，大脑处于最清醒的状态，此时你做的任何事情都会给你带来正面的或者是负面的回路。 假如你一醒来就拿起手机，刷一会微信或者是小红书，那么接下来你也...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"认知","slug":"认知","count":1,"path":"api/tags/认知.json"},{"name":"个人成长","slug":"个人成长","count":1,"path":"api/tags/个人成长.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Performance Schema入门指南:你的MySQL性能监测杀器","uid":"ba1c6774f6090755efbcf2d6c3343eae","slug":"Performance-Schema入门指南-你的MySQL性能监测杀器","date":"2022-11-28T14:23:44.000Z","updated":"2022-11-28T14:25:33.753Z","comments":true,"path":"api/articles/Performance-Schema入门指南-你的MySQL性能监测杀器.json","cover":null,"text":"简介Performance提供了有关MySQL服务器内部运行的底层指标。在高负载下数据库调优是一个循环迭代的过程，每次更改以调整数据库的性能时，都需要了解更改是否有什么影响。而Performance Schama就是一个能够存储回答这个问题所需要的数据的数据库。 工作机制插桩（i...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"},{"name":"监控","slug":"监控","count":1,"path":"api/tags/监控.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"你真的了解你的MySQL吗(MySQL基准测试)","uid":"4468f948c4ca4e742d657728958a113e","slug":"你真的了解你的MySQL吗-MySQL基准测试","date":"2022-11-12T13:31:33.000Z","updated":"2022-11-12T13:31:47.878Z","comments":true,"path":"api/articles/你真的了解你的MySQL吗-MySQL基准测试.json","cover":[],"text":"如果你没有真正的对服务器上的MySQL进行基准测试，就无法了解其真实情况到底是如何。 基准测试是数据库工程师必备的技能之一，否则你如何知道自己真的在优化数据库？ 为什么需要基测？基测可以观察系统在不同压力下的行为： 验证基于系统的一些假设是否符合实际情况。 测试当前的运行情况，如...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"多租户架构解析","uid":"bb79ff4f10f53b63ae134cf1b5bcc787","slug":"多租户架构解析","date":"2023-09-19T02:18:48.000Z","updated":"2023-09-19T02:19:16.591Z","comments":true,"path":"api/articles/多租户架构解析.json","cover":null,"text":"多租户架构是SaaS系统开发中不可避免要考虑到的问题之一。 多租户的意义在在于数据完全的隔离，即公司A无法看到公司B的任何数据，反之亦然。 使得每一个公司从自身层面上看都是独占系统的。 实现多租户功能需要尽可能的通过架构底层来实现，而不是让开发人员从业务SQL上进行拼接。否则极其...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"架构设计","slug":"架构设计","count":1,"path":"api/tags/架构设计.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Maven Deamon-更快的Maven","uid":"7685adb7b43e1e02fce5149c97fbe7da","slug":"Maven-Deamon-更快的Maven","date":"2023-08-27T14:53:23.000Z","updated":"2023-08-27T14:59:35.539Z","comments":true,"path":"api/articles/Maven-Deamon-更快的Maven.json","cover":[],"text":"简介Maven Daemon 简称mvnd，使用与Gradle与Takari相同的技巧，为Maven项目提供了更快的构建。 内置了maven 通过一个长期的存活的后台线程来完成实际的构建。 同一个后台线程能够服务于多个项目之间的构建。 每个mvnd的客户端，使用了GraaleVM...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Build","slug":"Build","count":1,"path":"api/tags/Build.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kafka-生产者原理","uid":"2c4486aa05507c9fe7bc6767ce95c998","slug":"kafka-生产者原理","date":"2023-08-17T10:26:08.000Z","updated":"2023-08-17T10:28:18.312Z","comments":true,"path":"api/articles/kafka-生产者原理.json","cover":[],"text":"kafka生产者生产者架构 一个kafka的生产者将包含着 MetaData（关于主题、分区的元数据缓存，会定时的从Broker中拉取） Partiioner分区器（用于根据消息的Key来决定其所在分区） Serializer序列化器（将从Java的POJO对象通过变为一串用于网...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"kafka","slug":"kafka","count":1,"path":"api/tags/kafka.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"RocketMQ-延时队列","uid":"20c628775f69ad677f830c91dd71d5bc","slug":"RocketMQ-延时队列","date":"2023-08-16T00:21:58.000Z","updated":"2023-08-16T00:22:13.857Z","comments":true,"path":"api/articles/RocketMQ-延时队列.json","cover":null,"text":"RocketMQ如何自定义延时级别？RocketMQ在4.3版本之后，MessageStoreConfig配置类中添加了一个十分有用的属性messageDelayLevel。 private String messageDelayLevel = \"1s 5s 10s 30s 1m...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"MQ","slug":"MQ","count":5,"path":"api/tags/MQ.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kafka-存储原理","uid":"dd39451fcd6a79af30692832dae32cef","slug":"kafka-存储原理","date":"2023-08-14T14:00:17.000Z","updated":"2023-08-14T14:02:34.072Z","comments":true,"path":"api/articles/kafka-存储原理.json","cover":null,"text":"本章节将讲解Kafka的底层存储机制，如何实现分区副本的分配、索引机制、如何管理文件以及重要的Kafka压缩机制。 持久化文件系统Kafka重度的依赖于文件系统来存储和缓存消息，即使磁盘通常被认为性能十分缓慢。但实际上，磁盘的读写性能取决于其使用的场景。一个设计良好的磁盘结构能够...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"MQ","slug":"MQ","count":5,"path":"api/tags/MQ.json"},{"name":"Raft","slug":"Raft","count":1,"path":"api/tags/Raft.json"},{"name":"Rate Limiting","slug":"Rate-Limiting","count":1,"path":"api/tags/Rate-Limiting.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kafka-请求处理","uid":"d709ff68faafebbf1f49a2d66baac1a6","slug":"kafka-请求处理","date":"2023-08-14T13:59:14.000Z","updated":"2023-08-14T14:02:59.448Z","comments":true,"path":"api/articles/kafka-请求处理.json","cover":null,"text":"kafka中broker与client的交互都是通过TCP协议来实现的，通过固定的请求格式和请求响应。 任何请求都能够按照顺序被响应，使得 kafka 能够向队列一样保证消息的存储数据。 请求头由什么构成？每个请求头都包含四个固定的参数： Request type，请求类型，也叫...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"MQ","slug":"MQ","count":5,"path":"api/tags/MQ.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kafka搭建、基本配置和调优","uid":"8d37cbd2fbc0c698ac8b858553ced3c3","slug":"Kafka搭建、基本配置和调优","date":"2023-08-09T09:39:17.000Z","updated":"2023-08-09T09:40:46.634Z","comments":true,"path":"api/articles/Kafka搭建、基本配置和调优.json","cover":null,"text":"Apache Kafka Quick Start Kafka安装1. 下载资源包Apache Kafka Downloads 下载Binary资源包 Apache ZooKeeper 下载Binary资源包（不带Source Release的那个） Apache项目发布的时候基本...","link":"","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[],"tags":[{"name":"MQ","slug":"MQ","count":5,"path":"api/tags/MQ.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kafka架构与核心概念","uid":"b616fd44c5f7ef9bc2632badbc783987","slug":"Kafka架构与核心概念","date":"2023-08-08T08:57:39.000Z","updated":"2023-08-08T09:15:12.609Z","comments":true,"path":"api/articles/Kafka架构与核心概念.json","cover":null,"text":"![](Pasted image 20230808161829.png) Kafka Cluster集群：Kafka集群会由一个或多个Broker（有的地方也叫server或者是node）组成，Broker负责Producer和Consumer之间的消息传递和持久化。 是整个架构...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"MQ","slug":"MQ","count":5,"path":"api/tags/MQ.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"基于Prometheus实现SpringBoot应用数据采集与业务埋点","uid":"51d09946e274f8b72c614484ac075533","slug":"基于Prometheus实现SpringBoot应用数据采集与业务埋点","date":"2023-05-22T14:01:22.000Z","updated":"2023-08-08T09:09:40.307Z","comments":true,"path":"api/articles/基于Prometheus实现SpringBoot应用数据采集与业务埋点.json","cover":null,"text":"前提概要：假设你已经了解了Prometheus是做什么的，以及如何基于Prometheus搭建一个指标监控体系。本章节将讲解如何基于Prometheus对SpringBoot进行指标采集 SpringBoot监控添加prometheus依赖： &lt;!-- for monito...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"},{"name":"Prometheus","slug":"Prometheus","count":1,"path":"api/tags/Prometheus.json"},{"name":"业务","slug":"业务","count":1,"path":"api/tags/业务.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}