{"total":21,"pageSize":12,"pageCount":2,"data":[{"title":"OkHttp：更加优雅的客户端OkHttps","uid":"c7562fc289c09e37ab4a4b417948e80b","slug":"OkHttp：更加优雅的客户端OkHttps","date":"2022-11-21T00:55:52.000Z","updated":"2022-11-21T00:56:34.620Z","comments":true,"path":"api/articles/OkHttp：更加优雅的客户端OkHttps.json","cover":null,"text":"上文中，我们介绍了OkHttp的一些常见的用法，以及对其API进行了一些便于调用的封装。而笔者在深入学习的过程中发现了一个基于Lambda表达式、链式调用进行封装的OkHttps，使其的调用方式更加的优雅、简介。 简介https://ok.zhxu.cn/v4/introduct...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"工具","slug":"工具","count":2,"path":"api/tags/工具.json"},{"name":"OkHttp","slug":"OkHttp","count":2,"path":"api/tags/OkHttp.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"减少你的代码量：基于AOP实现字典翻译","uid":"db73c7a78b5189912e109ef7e8566686","slug":"减少你的代码量：基于AOP实现字典翻译","date":"2022-11-18T09:40:43.000Z","updated":"2022-11-18T09:42:35.819Z","comments":true,"path":"api/articles/减少你的代码量：基于AOP实现字典翻译.json","cover":[],"text":"什么是字典？开发者更加倾向于使用短小的字段类型比如 tinyint、char(1)等来存储一些类型字段，以让每个数据都能够尽可能少的占用空间。 而用户当然不买单，希望能够看到每个字段都真正含义（比如 status &#x3D; 1时，其真正含义是状态进行中， status &#x...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"SpringAOP","slug":"SpringAOP","count":1,"path":"api/tags/SpringAOP.json"},{"name":"减少你的代码量","slug":"减少你的代码量","count":1,"path":"api/tags/减少你的代码量.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"OkHttp使用指南:封装一个好用的Http客户端","uid":"132bc548a30620e50cfa7c41af4da051","slug":"OkHttp使用指南-封装一个好用的Http客户端","date":"2022-11-17T14:45:41.000Z","updated":"2022-11-21T00:56:33.656Z","comments":true,"path":"api/articles/OkHttp使用指南-封装一个好用的Http客户端.json","cover":null,"text":"OkHttp是一个高效的HTTP请求客户端对于Android和Java应用。其有着许多高级的功能，比如线程池、GZip压缩和响应缓存。 同时不仅能够发送同步的请求，也能够支持异步调用。 &lt;dependency> &lt;groupId>com.squareup.okhttp...","link":"","photos":[],"count_time":{"symbolsCount":"7.4k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"工具","slug":"工具","count":2,"path":"api/tags/工具.json"},{"name":"OkHttp","slug":"OkHttp","count":2,"path":"api/tags/OkHttp.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Redis BitMap学习:实现海量二值数据统计","uid":"c0da45d30bd1cfd1cf13bf28f1302d4d","slug":"Redis-BitMap学习-实现海量二值数据统计","date":"2022-11-15T01:08:44.000Z","updated":"2022-11-15T01:09:06.495Z","comments":true,"path":"api/articles/Redis-BitMap学习-实现海量二值数据统计.json","cover":[],"text":"为什么要使用bitmapBitmap 的底层数据结构用的是 String 类型的 SDS 数据结构来保存位数组，把每个字节数组的 8 个 bit 位利用起来，每个 bit 位 表示一个元素的二值状态（不是 0 就是 1）。可以将 Bitmap 看成是一个 bit 为单位的数组，所...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Reids","slug":"Reids","count":1,"path":"api/tags/Reids.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"如何使用Swagger3与OpenAPI规范","uid":"738b9e0126fd231ff00bb0e09eaaa743","slug":"如何使用Swagger3与OpenAPI规范","date":"2022-11-13T08:09:01.000Z","updated":"2022-11-13T08:10:46.664Z","comments":true,"path":"api/articles/如何使用Swagger3与OpenAPI规范.json","cover":null,"text":"swagger 是一个 api 文档维护组织，后来成为了 Open API 标准的主要定义者，现在最新的版本为17年发布的 Swagger3（Open Api3）。 国内绝大部分人还在用过时的swagger2（17年停止维护并更名为swagger3） swagger2的包名为 i...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"OpenAPI","slug":"OpenAPI","count":1,"path":"api/tags/OpenAPI.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MySQL深分页问题及解决方案","uid":"09b0502743a194205f4a0a60c94f4ead","slug":"MySQL深分页问题及解决方案","date":"2022-11-12T13:28:38.000Z","updated":"2022-11-28T14:25:40.790Z","comments":true,"path":"api/articles/MySQL深分页问题及解决方案.json","cover":null,"text":"在MySQL中的需要分页操作我们会使用limit关键字加上偏移量来实现。但实际上limit 10000， 10分页关键字的实际原理是，查询出10000 + 10行数据后，舍弃前面的10000行数据，然后取最后的10行数据。 而要想优化这种分页查询，我们会尽可能的使用覆盖索引扫描 ...","link":"","photos":[],"count_time":{"symbolsCount":454,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MySQL索引到底什么场景会失效？","uid":"f09369e68b8b45b4d7396ee196bab5db","slug":"MySQL索引到底什么场景会失效？","date":"2022-11-12T13:28:26.000Z","updated":"2022-11-12T13:30:39.501Z","comments":true,"path":"api/articles/MySQL索引到底什么场景会失效？.json","cover":null,"text":"MySQL在一些场景下会出现设置了索引也会失效的情况。 1. 数据量过小当MySQL的数据量只有几行十几行的时候，这时候MySQL可能会认为全表扫描的效率甚至高于使用索引扫描，所以产生索引失效。 数据量过小的情况无论是否使用索引速度都很快，所以无需优化。 2. 当表过大在MySQ...","link":"","photos":[],"count_time":{"symbolsCount":704,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"为什么MySQL不使用Hash作为索引类型","uid":"7f627cb8c8effb7ae31a975e2ea25f37","slug":"为什么MySQL不使用Hash作为索引类型","date":"2022-11-12T13:26:39.000Z","updated":"2022-11-12T13:28:01.628Z","comments":true,"path":"api/articles/为什么MySQL不使用Hash作为索引类型.json","cover":null,"text":"因为Hash这个数据结构的特征，导致每个key最后的哈希值是无序的。所以 使用Hash作为索引类型的使用无法使用任何的范围查询。 也无法使用像b+树那样满足like语句。 优化器也无法将hash作用于order by操作符 ","link":"","photos":[],"count_time":{"symbolsCount":114,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Java应届生面试复盘","uid":"4ddb3a53c2271811530493a47c276c44","slug":"Java应届生面试复盘","date":"2022-11-07T03:07:40.000Z","updated":"2022-11-09T03:37:18.498Z","comments":true,"path":"api/articles/Java应届生面试复盘.json","cover":[],"text":" 主要内容 日期 &#x2F; 地点 面试结果 Java基础、并发编程、JVM、MQ、业务设计。 2022-11-05 线上 一般 业务设计 说说业务设计时你会考虑什么 首先，我会先确认好业务需求，明确这个功能会接受什么样的输入，产生什么样的输出。然后跟上游沟通好是否需要进行额外...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"面经","slug":"面经","count":1,"path":"api/tags/面经.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}