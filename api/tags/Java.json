{"name":"Java","slug":"Java","count":2,"postlist":[{"title":"FastJson安全漏洞分析","uid":"13c371c2ff633aa9e8eadac4915ee855","slug":"FastJson安全漏洞","date":"2023-03-30T01:27:51.735Z","updated":"2023-03-30T03:01:30.668Z","comments":true,"path":"api/articles/FastJson安全漏洞.json","cover":null,"text":"FastJson如何进行序列化的？FastJson和Jackson的序列化方式都是通过反射获取对象的getter方法来获得属性值的（Gson是通过直接反射属性）。 FastJson的序列化问题当一个类实现了一个接口的时候，在FastJson中进行序列化时，会将这个类的实际类型抹去...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"序列化","slug":"序列化","count":1,"path":"api/tags/序列化.json"}],"author":{"name":"yaowenbin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位不断成长的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Java中属性初始化的差异","uid":"4b2a67d332f9fb2b23f7506e99d7e81b","slug":"Java中属性初始化的差异","date":"2023-05-05T13:14:39.000Z","updated":"2023-05-05T13:16:35.902Z","comments":true,"path":"api/articles/Java中属性初始化的差异.json","cover":null,"text":"在Java中，你可以直接在声明属性时初始化、也可以在构造函数中初始化、甚至可以在static代码块中初始化，那么三者有什么差异呢？ 初始化的时机不同static代码块中的代码会在类第一次加载时就进行，不需要实例的存在。而构造函数和属性中初始化的变量在对象创建时才进行。所以stat...","link":"","photos":[],"count_time":{"symbolsCount":305,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"}],"author":{"name":"yaowenbin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位不断成长的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]}