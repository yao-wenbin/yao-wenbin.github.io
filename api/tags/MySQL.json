{"name":"MySQL","slug":"MySQL","count":5,"postlist":[{"title":"MySQL索引到底什么场景会失效？","uid":"f09369e68b8b45b4d7396ee196bab5db","slug":"MySQL索引到底什么场景会失效？","date":"2022-11-12T13:28:26.000Z","updated":"2022-11-12T13:30:39.501Z","comments":true,"path":"api/articles/MySQL索引到底什么场景会失效？.json","cover":null,"text":"MySQL在一些场景下会出现设置了索引也会失效的情况。 1. 数据量过小当MySQL的数据量只有几行十几行的时候，这时候MySQL可能会认为全表扫描的效率甚至高于使用索引扫描，所以产生索引失效。 数据量过小的情况无论是否使用索引速度都很快，所以无需优化。 2. 当表过大在MySQ...","link":"","photos":[],"count_time":{"symbolsCount":704,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"author":{"name":"yaowenbin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位不断成长的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"为什么MySQL不使用Hash作为索引类型","uid":"7f627cb8c8effb7ae31a975e2ea25f37","slug":"为什么MySQL不使用Hash作为索引类型","date":"2022-11-12T13:26:39.000Z","updated":"2022-11-12T13:28:01.628Z","comments":true,"path":"api/articles/为什么MySQL不使用Hash作为索引类型.json","cover":null,"text":"因为Hash这个数据结构的特征，导致每个key最后的哈希值是无序的。所以 使用Hash作为索引类型的使用无法使用任何的范围查询。 也无法使用像b+树那样满足like语句。 优化器也无法将hash作用于order by操作符 ","link":"","photos":[],"count_time":{"symbolsCount":114,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"author":{"name":"yaowenbin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位不断成长的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MySQL深分页问题及解决方案","uid":"09b0502743a194205f4a0a60c94f4ead","slug":"MySQL深分页问题及解决方案","date":"2022-11-12T13:28:38.000Z","updated":"2022-11-28T14:25:40.790Z","comments":true,"path":"api/articles/MySQL深分页问题及解决方案.json","cover":null,"text":"在MySQL中的需要分页操作我们会使用limit关键字加上偏移量来实现。但实际上limit 10000， 10分页关键字的实际原理是，查询出10000 + 10行数据后，舍弃前面的10000行数据，然后取最后的10行数据。 而要想优化这种分页查询，我们会尽可能的使用覆盖索引扫描 ...","link":"","photos":[],"count_time":{"symbolsCount":454,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"author":{"name":"yaowenbin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位不断成长的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"你真的了解你的MySQL吗(MySQL基准测试)","uid":"4468f948c4ca4e742d657728958a113e","slug":"你真的了解你的MySQL吗-MySQL基准测试","date":"2022-11-12T13:31:33.000Z","updated":"2022-11-12T13:31:47.878Z","comments":true,"path":"api/articles/你真的了解你的MySQL吗-MySQL基准测试.json","cover":[],"text":"如果你没有真正的对服务器上的MySQL进行基准测试，就无法了解其真实情况到底是如何。 基准测试是数据库工程师必备的技能之一，否则你如何知道自己真的在优化数据库？ 为什么需要基测？基测可以观察系统在不同压力下的行为： 验证基于系统的一些假设是否符合实际情况。 测试当前的运行情况，如...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"author":{"name":"yaowenbin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位不断成长的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Performance Schema入门指南:你的MySQL性能监测杀器","uid":"ba1c6774f6090755efbcf2d6c3343eae","slug":"Performance-Schema入门指南-你的MySQL性能监测杀器","date":"2022-11-28T14:23:44.000Z","updated":"2022-11-28T14:25:33.753Z","comments":true,"path":"api/articles/Performance-Schema入门指南-你的MySQL性能监测杀器.json","cover":null,"text":"简介Performance提供了有关MySQL服务器内部运行的底层指标。在高负载下数据库调优是一个循环迭代的过程，每次更改以调整数据库的性能时，都需要了解更改是否有什么影响。而Performance Schama就是一个能够存储回答这个问题所需要的数据的数据库。 工作机制插桩（i...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"},{"name":"监控","slug":"监控","count":1,"path":"api/tags/监控.json"}],"author":{"name":"yaowenbin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位不断成长的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]}