{"title":"RocketMQ-延时队列","uid":"20c628775f69ad677f830c91dd71d5bc","slug":"RocketMQ-延时队列","date":"2023-08-16T00:21:58.000Z","updated":"2023-08-16T00:22:13.857Z","comments":true,"path":"api/articles/RocketMQ-延时队列.json","cover":null,"content":"<h2 id=\"RocketMQ如何自定义延时级别？\"><a href=\"#RocketMQ如何自定义延时级别？\" class=\"headerlink\" title=\"RocketMQ如何自定义延时级别？\"></a>RocketMQ如何自定义延时级别？</h2><p>RocketMQ在4.3版本之后，MessageStoreConfig配置类中添加了一个十分有用的属性messageDelayLevel。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> messageDelayLevel <span class=\"token operator\">=</span> <span class=\"token string\">\"1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>使得RocketMQ不再固定的18个延时级别等级，能够通过配置文件让用户自定义任意级别的延时消息。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">messageDelayLevel &#x3D; 1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h 24h 48h<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"Java-SDK如何发送延时任务？\"><a href=\"#Java-SDK如何发送延时任务？\" class=\"headerlink\" title=\"Java SDK如何发送延时任务？\"></a>Java SDK如何发送延时任务？</h2><p>在RocketMQ的Java SDK中，通过Message下的setDelayTimeLevel方法就能够指定消息的延时级别。 Broker在接收到带有dayTimeLevel的消息会自动的将其放入延时队列中。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ScheduledExample</span> <span class=\"token punctuation\">&#123;</span>  \n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span>  \n\t  \n\t<span class=\"token class-name\">DefaultMQProducer</span> producer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"scheduled-producer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\tproducer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t  \n\tproducer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t  \n\t<span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\tmessage<span class=\"token punctuation\">.</span><span class=\"token function\">setTopic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"topic\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\tmessage<span class=\"token punctuation\">.</span><span class=\"token function\">setBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Scheduled Message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CharsetUtil</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTF_8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\tmessage<span class=\"token punctuation\">.</span><span class=\"token function\">setDelayTimeLevel</span><span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token class-name\">SendResult</span> result <span class=\"token operator\">=</span> producer<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t  \n\tproducer<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t  \n\t<span class=\"token punctuation\">&#125;</span>  \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>RocketMQ的延时消息指定的是消息级别，所以使用者应该需要提前于RocketMQ Broker的运维者沟通好每个级别对应的具体延时时间。以防止设定了预期外的延时时间。</p></blockquote>\n<h1 id=\"RocketMQ延时消息的内部细节\"><a href=\"#RocketMQ延时消息的内部细节\" class=\"headerlink\" title=\"RocketMQ延时消息的内部细节\"></a>RocketMQ延时消息的内部细节</h1><h2 id=\"Broker-处理延时消息\"><a href=\"#Broker-处理延时消息\" class=\"headerlink\" title=\"Broker 处理延时消息\"></a>Broker 处理延时消息</h2><p>在Broker中，BrokerController控制器将会给MessageStore注册一系列PutMessageHook钩子函数，其中就包括了延时消息的处理逻辑：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BrokerController</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registerMessageStoreHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PutMessageHook</span><span class=\"token punctuation\">></span></span> putMessageHookList <span class=\"token operator\">=</span> messageStore<span class=\"token punctuation\">.</span><span class=\"token function\">getPutMessageHookList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tputMessageHookList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PutMessageHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t\t\t<span class=\"token annotation punctuation\">@Override</span>  \n\t\t\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">hookName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"handleScheduleMessage\"</span><span class=\"token punctuation\">;</span>  \n\t\t\t<span class=\"token punctuation\">&#125;</span>  \n\t\t\t  \n\t\t\t<span class=\"token annotation punctuation\">@Override</span>  \n\t\t\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">PutMessageResult</span> <span class=\"token function\">executeBeforePutMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageExt</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">MessageExtBrokerInner</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">HookUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleScheduleMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BrokerController</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageExtBrokerInner</span><span class=\"token punctuation\">)</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t\t\t<span class=\"token punctuation\">&#125;</span>  \n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>  \n\t\t\t<span class=\"token punctuation\">&#125;</span>  \n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DefaultMessageStore</span> <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">CompletableFuture</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PutMessageResult</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">asyncPutMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageExtBrokerInner</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PutMessageHook</span> putMessageHook <span class=\"token operator\">:</span> putMessageHookList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t<span class=\"token comment\">// 延时任务的处理逻辑会以钩子函数的方式注册到DefaultMessageStore中</span>\n\t<span class=\"token class-name\">PutMessageResult</span> handleResult <span class=\"token operator\">=</span> putMessageHook<span class=\"token punctuation\">.</span><span class=\"token function\">executeBeforePutMessage</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>handleResult <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">CompletableFuture</span><span class=\"token punctuation\">.</span><span class=\"token function\">completedFuture</span><span class=\"token punctuation\">(</span>handleResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token punctuation\">&#125;</span>  \n\t<span class=\"token punctuation\">&#125;</span>\n\t\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commitLog<span class=\"token punctuation\">.</span><span class=\"token function\">asyncPutMessage</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>当Producer发送了一个带有DelayTimeLevel、TIMER_DELIVER_MS、TIMER_DELAY_SEC任意一个参数时，Broker就会将其视为是一条延时消息。</p>\n<p>对于延时消息的处理，RocketMQ5.x版本推出了全新的TimerMessageStore来支持任意精度的延时消息，并且同样支持RocketMQ4.x版本中的延时等级的延时消息，所以对于延时消息的处理会有两种不同的逻辑，分别根据DelayTimeLevel（4.x）和TIMER_DELIVER_MS、TIMER_DELAY_SEC（5.x）进行判断：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isRolledTimerMessage</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">checkIfTimerMessage</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>brokerController<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageStoreConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isTimerWheelEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t\t<span class=\"token comment\">//wheel timer is not enabled, reject the message  </span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PutMessageResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PutMessageStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WHEEL_TIMER_NOT_ENABLE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token punctuation\">&#125;</span>  \n\t\t<span class=\"token class-name\">PutMessageResult</span> transformRes <span class=\"token operator\">=</span> <span class=\"token function\">transformTimerMessage</span><span class=\"token punctuation\">(</span>brokerController<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> transformRes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t\t\t<span class=\"token keyword\">return</span> transformRes<span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token punctuation\">&#125;</span>  \n\t<span class=\"token punctuation\">&#125;</span>  \n<span class=\"token punctuation\">&#125;</span>  \n<span class=\"token comment\">// Delay Delivery  </span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getDelayTimeLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t<span class=\"token function\">transformDelayLevelMessage</span><span class=\"token punctuation\">(</span>brokerController<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>老版本4.x中经典的延时等级的转化会将Message中原本将要投递的Topic和QueueId主题取出来，作为REAL_TOPIC和REAL_QUEUE_ID两个属性存入Message的Properties属性Map中。 然后将msg的topic修改为SCHEDULE_TOPIC_XXXX，queueId修改为delayLevel对应的队列号。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HookUtils</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transformDelayLevelMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BrokerController</span> brokerController<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MessageExtBrokerInner</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token comment\">// Backup real topic, queueId  </span>\n\t<span class=\"token class-name\">MessageAccessor</span><span class=\"token punctuation\">.</span><span class=\"token function\">putProperty</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MessageConst</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROPERTY_REAL_TOPIC</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">getTopic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token class-name\">MessageAccessor</span><span class=\"token punctuation\">.</span><span class=\"token function\">putProperty</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MessageConst</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROPERTY_REAL_QUEUE_ID</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getQueueId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\tmsg<span class=\"token punctuation\">.</span><span class=\"token function\">setPropertiesString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageDecoder</span><span class=\"token punctuation\">.</span><span class=\"token function\">messageProperties2String</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t  \n\tmsg<span class=\"token punctuation\">.</span><span class=\"token function\">setTopic</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TopicValidator</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RMQ_SYS_SCHEDULE_TOPIC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\tmsg<span class=\"token punctuation\">.</span><span class=\"token function\">setQueueId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ScheduleMessageService</span><span class=\"token punctuation\">.</span><span class=\"token function\">delayLevel2QueueId</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getDelayTimeLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t  \n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>而5.x的新版本的延时消息使用的是时间轮算法，其中以1s作为一个单元格，划分为了 7 * 24 * 3600（总为7天）个单元格。 transformTimerMessage中根据Message中设定的TIMER_DELAY_MS（延时时间）或者是TIMER_DELAY_SEC的值 计算好该消息的到期时间 然后作为 TIMER_OUT_MS 再次放入Properties中使得随后的TimerMessageStore中能够根据该值放入对应的时间格中。 </p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token function\">transformTimerMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageConst</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROPERTY_TIMER_DELAY_SEC</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t\tdeliverMs <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseLong</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageConst</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROPERTY_TIMER_DELAY_SEC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageConst</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROPERTY_TIMER_DELAY_MS</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t\tdeliverMs <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseLong</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageConst</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROPERTY_TIMER_DELAY_MS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>  \n\t\tdeliverMs <span class=\"token operator\">=</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseLong</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageConst</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROPERTY_TIMER_DELIVER_MS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token comment\">// .... 省略一些校验</span>\n\t<span class=\"token class-name\">MessageAccessor</span><span class=\"token punctuation\">.</span><span class=\"token function\">putProperty</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MessageConst</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROPERTY_TIMER_OUT_MS</span><span class=\"token punctuation\">,</span> deliverMs <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token class-name\">MessageAccessor</span><span class=\"token punctuation\">.</span><span class=\"token function\">putProperty</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MessageConst</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROPERTY_REAL_TOPIC</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">getTopic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token class-name\">MessageAccessor</span><span class=\"token punctuation\">.</span><span class=\"token function\">putProperty</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MessageConst</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROPERTY_REAL_QUEUE_ID</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getQueueId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t\tmsg<span class=\"token punctuation\">.</span><span class=\"token function\">setPropertiesString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageDecoder</span><span class=\"token punctuation\">.</span><span class=\"token function\">messageProperties2String</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\tmsg<span class=\"token punctuation\">.</span><span class=\"token function\">setTopic</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimerMessageStore</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TIMER_TOPIC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\tmsg<span class=\"token punctuation\">.</span><span class=\"token function\">setQueueId</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>通过代码可以看到，5.x版本中的Timer是基于TimerMessageStore下的TIMER_TOPIC参数设定的，也就是rmq_sys_wheel_timer。</p>\n<p>当消息的延时属性转换结束之后，消息就会有DefaultMessageStore存入到对应的消息主题下。 接下来就是ScheduleMessageStore和TimerMessageStore两个延时消息服务的处理过程了。</p>\n<h2 id=\"ScheduleMessageService-4-x延时服务\"><a href=\"#ScheduleMessageService-4-x延时服务\" class=\"headerlink\" title=\"ScheduleMessageService 4.x延时服务\"></a>ScheduleMessageService 4.x延时服务</h2><p>ScheduleMessageService中根据MessageStore配置中的delayLevel的等级维护着一个固定数量的线程池deliverExecutorService、一个与延时等级对应的offset偏移量映射表、和一个与延时等级对应的timeMills映射表。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ScheduleMessageService</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ConfigManager</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ConcurrentMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Integer</span> <span class=\"token comment\">/* level */</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token comment\">/* delay timeMillis */</span><span class=\"token operator\">></span> delayLevelTable <span class=\"token operator\">=</span>  <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Integer</span> <span class=\"token comment\">/* level */</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PutResultProcess</span><span class=\"token punctuation\">></span></span><span class=\"token operator\">></span> deliverPendingTable <span class=\"token operator\">=</span>  \n<span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">ScheduledExecutorService</span> deliverExecutorService<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>deliverExecutorService在启动时会遍历每一个延时等级的偏移量列表offsetTable，创建一个与之对应的DeliverDelayedMessageTimerTask线程任务，来执行该延时等级的消息拉取任务。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> entry <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>delayLevelTable<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>deliverExecutorService<span class=\"token punctuation\">.</span><span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DeliverDelayedMessageTimerTask</span><span class=\"token punctuation\">(</span>level<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FIRST_DELAY_TIME</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MILLISECONDS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token punctuation\">&#125;</span>  \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>每个DeliverDelayedMessageTimerTask投递延迟消息定时任务都是一个每个100ms执行一次的线程</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token comment\">// 在ScheduleMessageService中固定的值</span>\n<span class=\"token constant\">DELAY_FOR_A_WHILE</span> <span class=\"token operator\">=</span> <span class=\"token number\">100L</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DeliverDelayedMessageTimerTask</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> delayLevel<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> offset<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">executeOnTimeUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduleNextTimerTask</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> <span class=\"token constant\">DELAY_FOR_A_WHILE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">executeOnTimeUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduleNextTimerTask</span><span class=\"token punctuation\">(</span>nextOffset<span class=\"token punctuation\">,</span> <span class=\"token constant\">DELAY_FOR_A_WHILE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>每个任务中维护着一个自身所所负责的延时等级delayLevel，以及本次任务所应该拉取的消息偏移量offset（这个值取自ConsumeQueue中的逻辑偏移量offset）。</p>\n<p>任务会从根据自身负责的delayLevel获取到从ConsumeQueue中获取SCHEDULE_TOPIC_XXXXX下对应的queue队列。</p>\n<p>试图获取offset偏移量对应的消息索引CqUnit，取出CqUnit中的TagCode（在延时队列中索引的TagCode对应着该索引所指向消息的到期时间戳）。</p>\n<p>如果tagCode的值小于当前系统时间戳，那么就表示当前索引所指向的消息到期了，应该立刻被执行。 根据当前CqUnit索引的偏移量查询出该消息，然后立刻投递。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DeliverDelayedMessageTimerTask</span> <span class=\"token punctuation\">&#123;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">executeOnTimeUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\t\n\t<span class=\"token keyword\">long</span> deliverTimestamp <span class=\"token operator\">=</span> cqUnit<span class=\"token punctuation\">.</span><span class=\"token function\">getTagsCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>deliverTimestamp <span class=\"token operator\">-</span> now <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token class-name\">MessageExt</span> msgExt <span class=\"token operator\">=</span> <span class=\"token class-name\">ScheduleMessageService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>brokerController<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">lookMessageByOffset</span><span class=\"token punctuation\">(</span>cqUnit<span class=\"token punctuation\">.</span><span class=\"token function\">getPos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cqUnit<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">// 将延时消息重新封装为业务消息（还原Topic、删除delayTimeLevel等属性）</span>\n\t<span class=\"token class-name\">MessageExtBrokerInner</span> msgInner <span class=\"token operator\">=</span> <span class=\"token class-name\">ScheduleMessageService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">messageTimeup</span><span class=\"token punctuation\">(</span>msgExt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">syncDeliver</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"TimerMessageService-5-x延时服务\"><a href=\"#TimerMessageService-5-x延时服务\" class=\"headerlink\" title=\"TimerMessageService 5.x延时服务\"></a>TimerMessageService 5.x延时服务</h2><p>TimerMessageService 是RocketMQ 5.x版本中 基于时间轮算法实现的延时消息服务， 与 ScheduleMessageService 其同样会从自己所负责的主题 rmq_sys_wheel_timer 中不断的拉取消息， 然后将其存入时间轮中。</p>\n<p>TimerMessageService下内聚了多个服务，为了最大程度的解耦每一个方法</p>\n<ul>\n<li><p>currWriteTimeMs的作用是什么？</p>\n</li>\n<li><p>TimerEnqueueGetService 延时主题的消息拉取服务：核心方法enqueue()，从主题rmq_sys_timer中尝试获取消息，获取到消息后封装一个TimerRequest将消息加入到enqueuePutQueue队列中。</p>\n</li>\n<li><p>TimerEnqueuePutService 延时主题的消息写入服务：核心方法fetchAndPutTimerRequest()，从enqueuePutQueue队列中批量的尝试获取TimerRequest，然后将request写入时间轮。</p>\n</li>\n<li><p>TimerDequeueWarnService （暂未使用） ： </p>\n</li>\n<li><p>TimerDequeuePutService 时间轮到期消息的执行服务 ： </p>\n</li>\n<li><p>TimerFlushService</p>\n</li>\n</ul>\n<p>Enqueue表示将要从主题中提取出来，加入到TimerWhell时间轮</p>\n<p>其中doEnqueue()方法承载着将消息从ConsumeQueue中取出，存入时间轮组件中的核心逻辑：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">doEnqueue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> offsetPy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> sizePy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> delayedTime<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MessageExt</span> messageExt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n\t<span class=\"token comment\">// 记录时间轮中当前时间戳 System.currentTimes() / precisionMs * precisionMs;</span>\n\t<span class=\"token keyword\">long</span> tmpWriteTimeMs <span class=\"token operator\">=</span> currWriteTimeMs<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 校验延时时长，是否超过了一个时间轮大小 </span>\n\t<span class=\"token keyword\">boolean</span> needRoll <span class=\"token operator\">=</span> delayedTime <span class=\"token operator\">-</span> tmpWriteTimeMs <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> timerRollWindowSlots <span class=\"token operator\">*</span> precisionMs<span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">int</span> magic <span class=\"token operator\">=</span> <span class=\"token constant\">MAGIC_DEFAULT</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>needRoll<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \nmagic <span class=\"token operator\">=</span> magic <span class=\"token operator\">|</span> <span class=\"token constant\">MAGIC_ROLL</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>delayedTime <span class=\"token operator\">-</span> tmpWriteTimeMs <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> timerRollWindowSlots <span class=\"token operator\">*</span> precisionMs <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> timerRollWindowSlots <span class=\"token operator\">/</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> precisionMs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n<span class=\"token comment\">//give enough time to next roll  </span>\ndelayedTime <span class=\"token operator\">=</span> tmpWriteTimeMs <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>timerRollWindowSlots <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> precisionMs<span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>  \ndelayedTime <span class=\"token operator\">=</span> tmpWriteTimeMs <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> timerRollWindowSlots <span class=\"token operator\">*</span> precisionMs<span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>  \n<span class=\"token punctuation\">&#125;</span>  \n<span class=\"token keyword\">boolean</span> isDelete <span class=\"token operator\">=</span> messageExt<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TIMER_DELETE_UNIQUE_KEY</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isDelete<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \nmagic <span class=\"token operator\">=</span> magic <span class=\"token operator\">|</span> <span class=\"token constant\">MAGIC_DELETE</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>  \n<span class=\"token class-name\">String</span> realTopic <span class=\"token operator\">=</span> messageExt<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageConst</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROPERTY_REAL_TOPIC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token class-name\">Slot</span> slot <span class=\"token operator\">=</span> timerWheel<span class=\"token punctuation\">.</span><span class=\"token function\">getSlot</span><span class=\"token punctuation\">(</span>delayedTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token class-name\">ByteBuffer</span> tmpBuffer <span class=\"token operator\">=</span> timerLogBuffer<span class=\"token punctuation\">;</span>  \ntmpBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \ntmpBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">putInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TimerLog</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UNIT_SIZE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//size  </span>\ntmpBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">putLong</span><span class=\"token punctuation\">(</span>slot<span class=\"token punctuation\">.</span>lastPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//prev pos  </span>\ntmpBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">putInt</span><span class=\"token punctuation\">(</span>magic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//magic  </span>\ntmpBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">putLong</span><span class=\"token punctuation\">(</span>tmpWriteTimeMs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//currWriteTime  </span>\ntmpBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">putInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>delayedTime <span class=\"token operator\">-</span> tmpWriteTimeMs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//delayTime  </span>\ntmpBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">putLong</span><span class=\"token punctuation\">(</span>offsetPy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//offset  </span>\ntmpBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">putInt</span><span class=\"token punctuation\">(</span>sizePy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//size  </span>\ntmpBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">putInt</span><span class=\"token punctuation\">(</span><span class=\"token function\">hashTopicForMetrics</span><span class=\"token punctuation\">(</span>realTopic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//hashcode of real topic  </span>\ntmpBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">putLong</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//reserved value, just set to 0 now  </span>\n<span class=\"token keyword\">long</span> ret <span class=\"token operator\">=</span> timerLog<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>tmpBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimerLog</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UNIT_SIZE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">!=</span> ret<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n<span class=\"token comment\">// If it's a delete message, then slot's total num -1  </span>\n<span class=\"token comment\">// TODO: check if the delete msg is in the same slot with \"the msg to be deleted\".  </span>\ntimerWheel<span class=\"token punctuation\">.</span><span class=\"token function\">putSlot</span><span class=\"token punctuation\">(</span>delayedTime<span class=\"token punctuation\">,</span> slot<span class=\"token punctuation\">.</span>firstPos <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">?</span> ret <span class=\"token operator\">:</span> slot<span class=\"token punctuation\">.</span>firstPos<span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">,</span>  \nisDelete <span class=\"token operator\">?</span> slot<span class=\"token punctuation\">.</span>num <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> slot<span class=\"token punctuation\">.</span>num <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> slot<span class=\"token punctuation\">.</span>magic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token function\">addMetric</span><span class=\"token punctuation\">(</span>messageExt<span class=\"token punctuation\">,</span> isDelete <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>  \n<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">!=</span> ret<span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":"RocketMQ如何自定义延时级别？RocketMQ在4.3版本之后，MessageStoreConfig配置类中添加了一个十分有用的属性messageDelayLevel。 private String messageDelayLevel = \"1s 5s 10s 30s 1m...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"MQ","slug":"MQ","count":5,"path":"api/tags/MQ.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#RocketMQ%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BB%B6%E6%97%B6%E7%BA%A7%E5%88%AB%EF%BC%9F\"><span class=\"toc-text\">RocketMQ如何自定义延时级别？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java-SDK%E5%A6%82%E4%BD%95%E5%8F%91%E9%80%81%E5%BB%B6%E6%97%B6%E4%BB%BB%E5%8A%A1%EF%BC%9F\"><span class=\"toc-text\">Java SDK如何发送延时任务？</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#RocketMQ%E5%BB%B6%E6%97%B6%E6%B6%88%E6%81%AF%E7%9A%84%E5%86%85%E9%83%A8%E7%BB%86%E8%8A%82\"><span class=\"toc-text\">RocketMQ延时消息的内部细节</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Broker-%E5%A4%84%E7%90%86%E5%BB%B6%E6%97%B6%E6%B6%88%E6%81%AF\"><span class=\"toc-text\">Broker 处理延时消息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ScheduleMessageService-4-x%E5%BB%B6%E6%97%B6%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">ScheduleMessageService 4.x延时服务</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TimerMessageService-5-x%E5%BB%B6%E6%97%B6%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">TimerMessageService 5.x延时服务</span></a></li></ol>","author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"kafka-生产者原理","uid":"2c4486aa05507c9fe7bc6767ce95c998","slug":"kafka-生产者原理","date":"2023-08-17T10:26:08.000Z","updated":"2023-08-17T10:28:18.312Z","comments":true,"path":"api/articles/kafka-生产者原理.json","cover":[],"text":"kafka生产者生产者架构 一个kafka的生产者将包含着 MetaData（关于主题、分区的元数据缓存，会定时的从Broker中拉取） Partiioner分区器（用于根据消息的Key来决定其所在分区） Serializer序列化器（将从Java的POJO对象通过变为一串用于网...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"kafka","slug":"kafka","count":1,"path":"api/tags/kafka.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"kafka-存储原理","uid":"dd39451fcd6a79af30692832dae32cef","slug":"kafka-存储原理","date":"2023-08-14T14:00:17.000Z","updated":"2023-08-14T14:02:34.072Z","comments":true,"path":"api/articles/kafka-存储原理.json","cover":null,"text":"本章节将讲解Kafka的底层存储机制，如何实现分区副本的分配、索引机制、如何管理文件以及重要的Kafka压缩机制。 持久化文件系统Kafka重度的依赖于文件系统来存储和缓存消息，即使磁盘通常被认为性能十分缓慢。但实际上，磁盘的读写性能取决于其使用的场景。一个设计良好的磁盘结构能够...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"MQ","slug":"MQ","count":5,"path":"api/tags/MQ.json"},{"name":"Raft","slug":"Raft","count":1,"path":"api/tags/Raft.json"},{"name":"Rate Limiting","slug":"Rate-Limiting","count":1,"path":"api/tags/Rate-Limiting.json"}],"author":{"name":"姚文彬","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"深入底层 掌握脉搏","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}