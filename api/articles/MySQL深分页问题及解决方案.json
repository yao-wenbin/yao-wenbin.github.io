{"title":"MySQL深分页问题及解决方案","uid":"09b0502743a194205f4a0a60c94f4ead","slug":"MySQL深分页问题及解决方案","date":"2022-11-12T13:28:38.000Z","updated":"2022-11-28T14:25:40.790Z","comments":true,"path":"api/articles/MySQL深分页问题及解决方案.json","cover":null,"content":"<p>在MySQL中的需要分页操作我们会使用<code>limit</code>关键字加上偏移量来实现。但实际上<code>limit 10000， 10</code>分页关键字的实际原理是，查询出10000 + 10行数据后，舍弃前面的10000行数据，然后取最后的10行数据。</p>\n<p>而要想优化这种分页查询，我们会尽可能的使用覆盖索引扫描 + 延迟关联来解决，具体的方案就是：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>audit<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> \n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> id <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>audit<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>create_time<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> lim \n<span class=\"token keyword\">USING</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>这样做的原理就是让执行器在二级索引中树找到10行数据，然后返回到聚集索引树取出所有记录后返回。</p>\n<p>如果是普通的LIMIT语句的话，那么其MySQL执行流程是这样的：</p>\n<ul>\n<li>会在二级索引树中去找出过滤出10010行数据。</li>\n<li>然后根据这10010行数据去聚集索引树中找到这10010行数据的取出（回表）。</li>\n<li>舍弃前10000万数据返回，取后10行数据返回（舍弃）。</li>\n</ul>\n","text":"在MySQL中的需要分页操作我们会使用limit关键字加上偏移量来实现。但实际上limit 10000， 10分页关键字的实际原理是，查询出10000 + 10行数据后，舍弃前面的10000行数据，然后取最后的10行数据。 而要想优化这种分页查询，我们会尽可能的使用覆盖索引扫描 ...","link":"","photos":[],"count_time":{"symbolsCount":454,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"toc":"","author":{"name":"yaowenbin","slug":"blog-author","avatar":"https://yaowenbinqwq.github.io/file/avatar.jpeg","link":"/","description":"一位不断成长的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"如何使用Swagger3与OpenAPI规范","uid":"738b9e0126fd231ff00bb0e09eaaa743","slug":"如何使用Swagger3与OpenAPI规范","date":"2022-11-13T08:09:01.000Z","updated":"2022-11-13T08:10:46.664Z","comments":true,"path":"api/articles/如何使用Swagger3与OpenAPI规范.json","cover":null,"text":"swagger 是一个 api 文档维护组织，后来成为了 Open API 标准的主要定义者，现在最新的版本为17年发布的 Swagger3（Open Api3）。 国内绝大部分人还在用过时的swagger2（17年停止维护并更名为swagger3） swagger2的包名为 i...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"OpenAPI","slug":"OpenAPI","count":1,"path":"api/tags/OpenAPI.json"}],"author":{"name":"yaowenbin","slug":"blog-author","avatar":"https://yaowenbinqwq.github.io/file/avatar.jpeg","link":"/","description":"一位不断成长的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MySQL索引到底什么场景会失效？","uid":"f09369e68b8b45b4d7396ee196bab5db","slug":"MySQL索引到底什么场景会失效？","date":"2022-11-12T13:28:26.000Z","updated":"2022-11-12T13:30:39.501Z","comments":true,"path":"api/articles/MySQL索引到底什么场景会失效？.json","cover":null,"text":"MySQL在一些场景下会出现设置了索引也会失效的情况。 1. 数据量过小当MySQL的数据量只有几行十几行的时候，这时候MySQL可能会认为全表扫描的效率甚至高于使用索引扫描，所以产生索引失效。 数据量过小的情况无论是否使用索引速度都很快，所以无需优化。 2. 当表过大在MySQ...","link":"","photos":[],"count_time":{"symbolsCount":704,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"MySQL","slug":"MySQL","count":5,"path":"api/tags/MySQL.json"}],"author":{"name":"yaowenbin","slug":"blog-author","avatar":"https://yaowenbinqwq.github.io/file/avatar.jpeg","link":"/","description":"一位不断成长的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}